import{_ as s,c as a,o as i,ag as e}from"./chunks/framework.Bw-5EFTY.js";const k=JSON.parse('{"title":"类型别名: IntoRect","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/Autodn.IntoRect.md","filePath":"api/types/Autodn.IntoRect.md"}'),n={name:"api/types/Autodn.IntoRect.md"};function p(l,t,o,h,r,d){return i(),a("div",null,t[0]||(t[0]=[e(`<p><a href="./../modules.html">Auto.dn</a> / <a href="./../modules/Autodn.html">Autodn</a> / IntoRect</p><h1 id="类型别名-intorect" tabindex="-1">类型别名: IntoRect <a class="header-anchor" href="#类型别名-intorect" aria-label="Permalink to &quot;类型别名: IntoRect&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IntoRect</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RectData</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Rect</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RectConstructorOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>可转换为 Rect 的数据类型。</p><h2 id="添加于" tabindex="-1">添加于 <a class="header-anchor" href="#添加于" aria-label="Permalink to &quot;添加于&quot;">​</a></h2><p>v0.18.0</p>`,6)]))}const u=s(n,[["render",p]]);export{k as __pageData,u as default};
