import{_ as s,c as t,o as i,ag as e}from"./chunks/framework.Bw-5EFTY.js";const k=JSON.parse('{"title":"类型别名: CanvasPointMode","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/Autodn.CanvasPointMode.md","filePath":"api/types/Autodn.CanvasPointMode.md"}'),n={name:"api/types/Autodn.CanvasPointMode.md"};function o(d,a,p,h,l,r){return i(),t("div",null,a[0]||(a[0]=[e('<p><a href="./../modules.html">Auto.dn</a> / <a href="./../modules/Autodn.html">Autodn</a> / CanvasPointMode</p><h1 id="类型别名-canvaspointmode" tabindex="-1">类型别名: CanvasPointMode <a class="header-anchor" href="#类型别名-canvaspointmode" aria-label="Permalink to &quot;类型别名: CanvasPointMode&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CanvasPointMode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Points&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Lines&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Polygon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>画板多个点在绘制时的连接方式。 <code>Points</code> 只绘制单个点，每个点独立； <code>Round</code> 每两个点连成一条线。点数必须是偶数（奇数时最后一个点会被忽略）； <code>Square</code> 将所有点依次相连，形成折线（不会自动闭合）。</p><h2 id="添加于" tabindex="-1">添加于 <a class="header-anchor" href="#添加于" aria-label="Permalink to &quot;添加于&quot;">​</a></h2><p>v0.19.0</p>',6)]))}const u=s(n,[["render",o]]);export{k as __pageData,u as default};
