import{_ as a,c as i,o as t,ag as e}from"./chunks/framework.Bw-5EFTY.js";const c=JSON.parse('{"title":"类型别名: CanvasTextOverflow","description":"","frontmatter":{},"headers":[],"relativePath":"api/types/Autodn.CanvasTextOverflow.md","filePath":"api/types/Autodn.CanvasTextOverflow.md"}'),l={name:"api/types/Autodn.CanvasTextOverflow.md"};function n(o,s,p,d,h,r){return t(),i("div",null,s[0]||(s[0]=[e('<p><a href="./../modules.html">Auto.dn</a> / <a href="./../modules/Autodn.html">Autodn</a> / CanvasTextOverflow</p><h1 id="类型别名-canvastextoverflow" tabindex="-1">类型别名: CanvasTextOverflow <a class="header-anchor" href="#类型别名-canvastextoverflow" aria-label="Permalink to &quot;类型别名: CanvasTextOverflow&quot;">​</a></h1><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CanvasTextOverflow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Clip&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Ellipsis&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;MiddleEllipsis&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Visible&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;StartEllipsis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>画板控制文字超出显示区域时的处理方式。 <code>Clip</code> 超出部分直接裁掉，不显示省略号； <code>Ellipsis</code> 超出部分显示省略号在末尾； <code>MiddleEllipsis</code> 超出部分显示省略号在中间； <code>Visible</code> 超出部分继续显示，可能溢出容器； <code>StartEllipsis</code> 超出部分显示省略号在开头。</p><h2 id="添加于" tabindex="-1">添加于 <a class="header-anchor" href="#添加于" aria-label="Permalink to &quot;添加于&quot;">​</a></h2><p>v0.19.0</p>',6)]))}const u=a(l,[["render",n]]);export{c as __pageData,u as default};
