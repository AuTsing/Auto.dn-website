import{_ as o,c as a,o as s,O as l}from"./chunks/framework.97fbe135.js";const F=JSON.parse('{"title":"io 输入输出","description":"","frontmatter":{},"headers":[],"relativePath":"api/io.md"}'),e={name:"api/io.md"},n=l(`<h1 id="io-输入输出" tabindex="-1">io 输入输出 <a class="header-anchor" href="#io-输入输出" aria-label="Permalink to &quot;io 输入输出&quot;">​</a></h1><p>该模块提供对安卓设备的输入输出操作。</p><h2 id="io-toast" tabindex="-1">io.toast <a class="header-anchor" href="#io-toast" aria-label="Permalink to &quot;io.toast&quot;">​</a></h2><p><code>toast(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>在屏幕输出 Toast 信息。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> toast </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Android</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">io</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">toast</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello from toast!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="io-log-日志" tabindex="-1">io.log 日志 <a class="header-anchor" href="#io-log-日志" aria-label="Permalink to &quot;io.log 日志&quot;">​</a></h2><p>日志对象，可以在应用的日志屏幕输出日志。</p><h2 id="io-log-verbose" tabindex="-1">io.log.verbose <a class="header-anchor" href="#io-log-verbose" aria-label="Permalink to &quot;io.log.verbose&quot;">​</a></h2><p><code>verbose(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>输出级别为 <code>VERBOSE</code> 的日志。</p><h2 id="io-log-info" tabindex="-1">io.log.info <a class="header-anchor" href="#io-log-info" aria-label="Permalink to &quot;io.log.info&quot;">​</a></h2><p><code>info(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>输出级别为 <code>INFO</code> 的日志。</p><h2 id="io-log-debug" tabindex="-1">io.log.debug <a class="header-anchor" href="#io-log-debug" aria-label="Permalink to &quot;io.log.debug&quot;">​</a></h2><p><code>debug(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>输出级别为 <code>DEBUG</code> 的日志。</p><h2 id="io-log-warn" tabindex="-1">io.log.warn <a class="header-anchor" href="#io-log-warn" aria-label="Permalink to &quot;io.log.warn&quot;">​</a></h2><p><code>warn(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>输出级别为 <code>WARN</code> 的日志。</p><h2 id="io-log-error" tabindex="-1">io.log.error <a class="header-anchor" href="#io-log-error" aria-label="Permalink to &quot;io.log.error&quot;">​</a></h2><p><code>error(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>输出级别为 <code>ERROR</code> 的日志。</p><h2 id="io-log-assert" tabindex="-1">io.log.assert <a class="header-anchor" href="#io-log-assert" aria-label="Permalink to &quot;io.log.assert&quot;">​</a></h2><p><code>assert(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>输出级别为 <code>ASSERT</code> 的日志。</p><h2 id="io-log-v" tabindex="-1">io.log.v <a class="header-anchor" href="#io-log-v" aria-label="Permalink to &quot;io.log.v&quot;">​</a></h2><p><code>v(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>同 <code>io.log.verbose</code></p><h2 id="io-log-i" tabindex="-1">io.log.i <a class="header-anchor" href="#io-log-i" aria-label="Permalink to &quot;io.log.i&quot;">​</a></h2><p><code>i(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>同 <code>io.log.info</code></p><h2 id="io-log-d" tabindex="-1">io.log.d <a class="header-anchor" href="#io-log-d" aria-label="Permalink to &quot;io.log.d&quot;">​</a></h2><p><code>d(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>同 <code>io.log.debug</code></p><h2 id="io-log-w" tabindex="-1">io.log.w <a class="header-anchor" href="#io-log-w" aria-label="Permalink to &quot;io.log.w&quot;">​</a></h2><p><code>w(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>同 <code>io.log.warn</code></p><h2 id="io-log-e" tabindex="-1">io.log.e <a class="header-anchor" href="#io-log-e" aria-label="Permalink to &quot;io.log.e&quot;">​</a></h2><p><code>e(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>同 <code>io.log.error</code></p><h2 id="io-log-a" tabindex="-1">io.log.a <a class="header-anchor" href="#io-log-a" aria-label="Permalink to &quot;io.log.a&quot;">​</a></h2><p><code>a(...args: any): void</code></p><ul><li><code>args</code> 任何类型的参数，最终会将其转换为字符串输出。</li></ul><p>同 <code>io.log.a</code></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> log </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Android</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">io</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">verbose</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello from log.verbose!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello from log.info!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">debug</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello from log.debug!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warn</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello from log.warn!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">error</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello from log.error!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">assert</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Hello from log.assert!</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,58),p=[n];function r(c,i,t,d,g,D){return s(),a("div",null,p)}const h=o(e,[["render",r]]);export{F as __pageData,h as default};
