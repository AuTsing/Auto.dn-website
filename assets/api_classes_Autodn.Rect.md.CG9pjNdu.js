import{_ as a,c as e,o as d,ag as s}from"./chunks/framework.Bw-5EFTY.js";const b=JSON.parse('{"title":"类: Rect","description":"","frontmatter":{},"headers":[],"relativePath":"api/classes/Autodn.Rect.md","filePath":"api/classes/Autodn.Rect.md"}'),i={name:"api/classes/Autodn.Rect.md"};function o(r,t,h,n,l,c){return d(),e("div",null,t[0]||(t[0]=[s(`<p><a href="./../modules.html">Auto.dn</a> / <a href="./../modules/Autodn.html">Autodn</a> / Rect</p><h1 id="类-rect" tabindex="-1">类: Rect <a class="header-anchor" href="#类-rect" aria-label="Permalink to &quot;类: Rect&quot;">​</a></h1><p>矩形类。</p><h2 id="添加于" tabindex="-1">添加于 <a class="header-anchor" href="#添加于" aria-label="Permalink to &quot;添加于&quot;">​</a></h2><p>v0.18.0</p><h2 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-label="Permalink to &quot;构造函数&quot;">​</a></h2><h3 id="构造函数-1" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数-1" aria-label="Permalink to &quot;构造函数&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Rect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   left: number, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   top: number, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   right: number, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   bottom: number): Rect;</span></span></code></pre></div><h4 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>left</code></td><td><code>number</code></td><td>左值</td></tr><tr><td><code>top</code></td><td><code>number</code></td><td>上值</td></tr><tr><td><code>right</code></td><td><code>number</code></td><td>右值</td></tr><tr><td><code>bottom</code></td><td><code>number</code></td><td>下值</td></tr></tbody></table><h4 id="返回" tabindex="-1">返回 <a class="header-anchor" href="#返回" aria-label="Permalink to &quot;返回&quot;">​</a></h4><p><code>Rect</code></p><h4 id="添加于-1" tabindex="-1">添加于 <a class="header-anchor" href="#添加于-1" aria-label="Permalink to &quot;添加于&quot;">​</a></h4><p>v0.18.0</p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性</th><th>修饰符</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><a id="bottom"></a> <code>bottom</code></td><td><code>readonly</code></td><td><code>number</code></td><td>下值。 <strong>添加于</strong> v0.18.0</td></tr><tr><td><a id="left"></a> <code>left</code></td><td><code>readonly</code></td><td><code>number</code></td><td>左值。 <strong>添加于</strong> v0.18.0</td></tr><tr><td><a id="right"></a> <code>right</code></td><td><code>readonly</code></td><td><code>number</code></td><td>右值。 <strong>添加于</strong> v0.18.0</td></tr><tr><td><a id="top"></a> <code>top</code></td><td><code>readonly</code></td><td><code>number</code></td><td>上值。 <strong>添加于</strong> v0.18.0</td></tr><tr><td><a id="defaultoptions"></a> <code>defaultOptions</code></td><td><code>readonly</code></td><td>{ <code>bottom</code>: <code>number</code>; <code>left</code>: <code>number</code>; <code>right</code>: <code>number</code>; <code>top</code>: <code>number</code>; }</td><td>默认选项。 <strong>添加于</strong> v0.18.0</td></tr><tr><td><code>defaultOptions.bottom</code></td><td><code>readonly</code></td><td><code>number</code></td><td>默认下值。 <strong>添加于</strong> v0.18.0</td></tr><tr><td><code>defaultOptions.left</code></td><td><code>readonly</code></td><td><code>number</code></td><td>默认左值。 <strong>添加于</strong> v0.18.0</td></tr><tr><td><code>defaultOptions.right</code></td><td><code>readonly</code></td><td><code>number</code></td><td>默认右值。 <strong>添加于</strong> v0.18.0</td></tr><tr><td><code>defaultOptions.top</code></td><td><code>readonly</code></td><td><code>number</code></td><td>默认上值。 <strong>添加于</strong> v0.18.0</td></tr></tbody></table><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="toltrb" tabindex="-1">toLtrb() <a class="header-anchor" href="#toltrb" aria-label="Permalink to &quot;toLtrb()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toLtrb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): RectData;</span></span></code></pre></div><p>获取矩形类数据。</p><h4 id="返回-1" tabindex="-1">返回 <a class="header-anchor" href="#返回-1" aria-label="Permalink to &quot;返回&quot;">​</a></h4><p><a href="./../types/Autodn.RectData.html"><code>RectData</code></a></p><p>矩形类数据</p><h4 id="添加于-2" tabindex="-1">添加于 <a class="header-anchor" href="#添加于-2" aria-label="Permalink to &quot;添加于&quot;">​</a></h4><p>v0.18.0</p><hr><h3 id="touint32array" tabindex="-1">toUint32Array() <a class="header-anchor" href="#touint32array" aria-label="Permalink to &quot;toUint32Array()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toUint32Array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): Uint32Array;</span></span></code></pre></div><p>获取 Uint32Array 包装的取矩形类数据。</p><h4 id="返回-2" tabindex="-1">返回 <a class="header-anchor" href="#返回-2" aria-label="Permalink to &quot;返回&quot;">​</a></h4><p><code>Uint32Array</code></p><p>Uint32Array 包装的取矩形类数据</p><h4 id="添加于-3" tabindex="-1">添加于 <a class="header-anchor" href="#添加于-3" aria-label="Permalink to &quot;添加于&quot;">​</a></h4><p>v0.18.0</p><hr><h3 id="from" tabindex="-1">from() <a class="header-anchor" href="#from" aria-label="Permalink to &quot;from()&quot;">​</a></h3><h4 id="调用签名" tabindex="-1">调用签名 <a class="header-anchor" href="#调用签名" aria-label="Permalink to &quot;调用签名&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(): Rect;</span></span></code></pre></div><p>使用默认选项构造 Rect 实例。</p><h5 id="返回-3" tabindex="-1">返回 <a class="header-anchor" href="#返回-3" aria-label="Permalink to &quot;返回&quot;">​</a></h5><p><code>Rect</code></p><p>Rect 实例</p><h5 id="添加于-4" tabindex="-1">添加于 <a class="header-anchor" href="#添加于-4" aria-label="Permalink to &quot;添加于&quot;">​</a></h5><p>v0.18.0</p><h4 id="调用签名-1" tabindex="-1">调用签名 <a class="header-anchor" href="#调用签名-1" aria-label="Permalink to &quot;调用签名&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ltrb: RectData): Rect;</span></span></code></pre></div><p>使用矩形类数据构造 Rect 实例。</p><h5 id="参数-1" tabindex="-1">参数 <a class="header-anchor" href="#参数-1" aria-label="Permalink to &quot;参数&quot;">​</a></h5><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>ltrb</code></td><td><a href="./../types/Autodn.RectData.html"><code>RectData</code></a></td><td>矩形类数据</td></tr></tbody></table><h5 id="返回-4" tabindex="-1">返回 <a class="header-anchor" href="#返回-4" aria-label="Permalink to &quot;返回&quot;">​</a></h5><p><code>Rect</code></p><p>Rect 实例</p><h5 id="添加于-5" tabindex="-1">添加于 <a class="header-anchor" href="#添加于-5" aria-label="Permalink to &quot;添加于&quot;">​</a></h5><p>v0.18.0</p><h4 id="调用签名-2" tabindex="-1">调用签名 <a class="header-anchor" href="#调用签名-2" aria-label="Permalink to &quot;调用签名&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rect: Rect): Rect;</span></span></code></pre></div><p>使用矩形类构造 Rect 实例。</p><h5 id="参数-2" tabindex="-1">参数 <a class="header-anchor" href="#参数-2" aria-label="Permalink to &quot;参数&quot;">​</a></h5><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>rect</code></td><td><code>Rect</code></td><td>矩形类的一个实例</td></tr></tbody></table><h5 id="返回-5" tabindex="-1">返回 <a class="header-anchor" href="#返回-5" aria-label="Permalink to &quot;返回&quot;">​</a></h5><p><code>Rect</code></p><p>Rect 实例</p><h5 id="添加于-6" tabindex="-1">添加于 <a class="header-anchor" href="#添加于-6" aria-label="Permalink to &quot;添加于&quot;">​</a></h5><p>v0.18.0</p><h4 id="调用签名-3" tabindex="-1">调用签名 <a class="header-anchor" href="#调用签名-3" aria-label="Permalink to &quot;调用签名&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options: RectConstructorOptions): Rect;</span></span></code></pre></div><p>使用矩形类构造选项构造 Rect 实例。</p><h5 id="参数-3" tabindex="-1">参数 <a class="header-anchor" href="#参数-3" aria-label="Permalink to &quot;参数&quot;">​</a></h5><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>options</code></td><td><a href="./../interfaces/Autodn.RectConstructorOptions.html"><code>RectConstructorOptions</code></a></td><td>矩形类构造选项</td></tr></tbody></table><h5 id="返回-6" tabindex="-1">返回 <a class="header-anchor" href="#返回-6" aria-label="Permalink to &quot;返回&quot;">​</a></h5><p><code>Rect</code></p><p>Rect 实例</p><h5 id="添加于-7" tabindex="-1">添加于 <a class="header-anchor" href="#添加于-7" aria-label="Permalink to &quot;添加于&quot;">​</a></h5><p>v0.18.0</p><h4 id="调用签名-4" tabindex="-1">调用签名 <a class="header-anchor" href="#调用签名-4" aria-label="Permalink to &quot;调用签名&quot;">​</a></h4><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   left: number, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   top: number, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   right: number, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   bottom: number): Rect;</span></span></code></pre></div><p>使用数值构造 Rect 实例。</p><h5 id="参数-4" tabindex="-1">参数 <a class="header-anchor" href="#参数-4" aria-label="Permalink to &quot;参数&quot;">​</a></h5><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>left</code></td><td><code>number</code></td><td>左值</td></tr><tr><td><code>top</code></td><td><code>number</code></td><td>上值</td></tr><tr><td><code>right</code></td><td><code>number</code></td><td>右值</td></tr><tr><td><code>bottom</code></td><td><code>number</code></td><td>下值</td></tr></tbody></table><h5 id="返回-7" tabindex="-1">返回 <a class="header-anchor" href="#返回-7" aria-label="Permalink to &quot;返回&quot;">​</a></h5><p><code>Rect</code></p><p>Rect 实例</p><h5 id="添加于-8" tabindex="-1">添加于 <a class="header-anchor" href="#添加于-8" aria-label="Permalink to &quot;添加于&quot;">​</a></h5><p>v0.18.0</p><hr><h3 id="isrectdata" tabindex="-1">isRectData() <a class="header-anchor" href="#isrectdata" aria-label="Permalink to &quot;isRectData()&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isRectData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(value: any): boolean;</span></span></code></pre></div><p>判断一个值是否为合法的矩形类数据。</p><h4 id="参数-5" tabindex="-1">参数 <a class="header-anchor" href="#参数-5" aria-label="Permalink to &quot;参数&quot;">​</a></h4><table tabindex="0"><thead><tr><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>value</code></td><td><code>any</code></td><td>任意类型的值</td></tr></tbody></table><h4 id="返回-8" tabindex="-1">返回 <a class="header-anchor" href="#返回-8" aria-label="Permalink to &quot;返回&quot;">​</a></h4><p><code>boolean</code></p><p>是否为合法的矩形类数据</p><h4 id="添加于-9" tabindex="-1">添加于 <a class="header-anchor" href="#添加于-9" aria-label="Permalink to &quot;添加于&quot;">​</a></h4><p>v0.18.0</p>`,95)]))}const u=a(i,[["render",o]]);export{b as __pageData,u as default};
