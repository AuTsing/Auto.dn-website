import{_ as d,c as e,o,ag as a}from"./chunks/framework.Bw-5EFTY.js";const v=JSON.parse('{"title":"接口: CanvasDrawTextOptions","description":"","frontmatter":{},"headers":[],"relativePath":"api/interfaces/Autodn.CanvasDrawTextOptions.md","filePath":"api/interfaces/Autodn.CanvasDrawTextOptions.md"}'),r={name:"api/interfaces/Autodn.CanvasDrawTextOptions.md"};function n(c,t,s,i,l,h){return o(),e("div",null,t[0]||(t[0]=[a('<p><a href="./../modules.html">Auto.dn</a> / <a href="./../modules/Autodn.html">Autodn</a> / CanvasDrawTextOptions</p><h1 id="接口-canvasdrawtextoptions" tabindex="-1">接口: CanvasDrawTextOptions <a class="header-anchor" href="#接口-canvasdrawtextoptions" aria-label="Permalink to &quot;接口: CanvasDrawTextOptions&quot;">​</a></h1><p>画板绘画文字选项。</p><h2 id="添加于" tabindex="-1">添加于 <a class="header-anchor" href="#添加于" aria-label="Permalink to &quot;添加于&quot;">​</a></h2><p>v0.19.0</p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性</th><th>修饰符</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><a id="fontcolor"></a> <code>fontColor?</code></td><td><code>readonly</code></td><td><code>number</code></td><td>文字颜色。 <strong>添加于</strong> v0.19.0</td></tr><tr><td><a id="fontsize"></a> <code>fontSize?</code></td><td><code>readonly</code></td><td><code>number</code></td><td>文字字号。 <strong>添加于</strong> v0.19.0</td></tr><tr><td><a id="id"></a> <code>id?</code></td><td><code>readonly</code></td><td><code>string</code></td><td>ID，如不提供则会分配唯一ID。 <strong>添加于</strong> v0.19.0</td></tr><tr><td><a id="maxlines"></a> <code>maxLines?</code></td><td><code>readonly</code></td><td><code>number</code></td><td>最大行数。 <strong>添加于</strong> v0.19.0</td></tr><tr><td><a id="rect"></a> <code>rect?</code></td><td><code>readonly</code></td><td><a href="./../types/Autodn.IntoRect.html"><code>IntoRect</code></a></td><td>文本显示矩形区域。 <strong>添加于</strong> v0.19.0</td></tr><tr><td><a id="text"></a> <code>text?</code></td><td><code>readonly</code></td><td><code>string</code></td><td>文本。 <strong>添加于</strong> v0.19.0</td></tr><tr><td><a id="textoverflow"></a> <code>textOverflow?</code></td><td><code>readonly</code></td><td><a href="./../types/Autodn.CanvasTextOverflow.html"><code>CanvasTextOverflow</code></a></td><td>文字超出显示区域时的处理方式，默认为 <code>CanvasTextOverflow.Clip</code>。 <strong>添加于</strong> v0.19.0</td></tr></tbody></table>',7)]))}const f=d(r,[["render",n]]);export{v as __pageData,f as default};
